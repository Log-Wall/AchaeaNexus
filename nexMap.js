"use strict";cy={},nexMap={logging:!0,mudmap:{},cytoscapeLoaded:!1,mudletMapLoaded:!1,currentRoom:-99,currentArea:-99,currentZ:-99,shortDirs:{east:"e",west:"w",south:"s",north:"n",northeast:"ne",northwest:"nw",southeast:"se",southeastst:"se",southwest:"sw",in:"in",out:"out",down:"d",up:"up"},wormWarpExits:{}},nexMap.findRoom=function(roomNum){nexMap.logging&&console.log(`nexMap: nexMap.findRoom(${roomNum})`);let area=nexMap.mudmap.areas.find(e=>e.rooms.find(e2=>e2.id==roomNum));if(void 0===area)return console.log(`Room ${roomNum} not mapped`),!1;let rm=area.rooms.find(e3=>e3.id==roomNum);return nexMap.logging&&console.log(rm),!0},nexMap.changeRoom=function(id){if(nexMap.logging&&console.log(`nexMap: nexMap.changeRoom(${id})`),!nexMap.findRoom(id))return;let room=cy.$id(id);cy.startBatch(),cy.$(".currentRoom").removeClass("currentRoom"),room.addClass("currentRoom"),cy.endBatch(),nexMap.currentRoom=id,$("#currentRoomLabel").text(`${room.data("areaName")}: ${room.data("name")}`),$("#currentExitsLabel").text(`Exits: ${room.data("exits").join(", ")}`),nexMap.changeArea(cy.$id(id).data().area,cy.$id(id).position().z),cy.center(".currentRoom")},nexMap.changeArea=function(area,z){if(nexMap.logging&&console.log(`nexMap: nexMap.changeArea(${area} ${z})`),area==nexMap.currentArea&&z==nexMap.currentZ)return;let x;nexMap.currentArea=area,nexMap.currentZ=z,cy.startBatch(),cy.$(".areaDisplay").removeClass("areaDisplay"),cy.$(".pseudo").remove(),cy.nodes().filter(e=>e.data("area")==nexMap.currentArea&&e.data("z")==nexMap.currentZ).addClass("areaDisplay"),nexMap.generateExits(),cy.center(nexMap.currentRoom),cy.endBatch()},nexMap.generateExits=function(){nexMap.logging&&console.log("nexMap: nexMap.generateExits()");let exitIndex=0,createExit=function(position,cmd,tar){let pos={...position};"s"==cmd?pos.y+=20:"n"==cmd?pos.y+=-20:"e"==cmd?pos.x+=20:"w"==cmd?pos.x+=-20:"se"==cmd?(pos.x+=20,pos.y+=20):"sw"==cmd?(pos.x+=-20,pos.y+=20):"ne"==cmd?(pos.x+=20,pos.y+=-20):"nw"==cmd&&(pos.x+=-20,pos.y+=-20);let newNode={group:"nodes",data:{id:`pseudo${exitIndex}`},position:{x:pos.x,y:pos.y,z:pos.z},classes:["pseudo",tar?"areaAdjacent":`pseudo-${cmd}`]};cy.add(newNode),tar&&cy.add({group:"edges",data:{id:`pseudoE${exitIndex}`,source:tar,target:newNode.data.id},classes:["pseudo","areaAdjacentExit"]}),exitIndex++},x=cy.edges().filter(e=>e.data("area")==nexMap.currentArea&&e.data("z")==nexMap.currentZ);x.filter(e=>["up","d","in","out"].includes(e.data("command"))).forEach(e=>createExit(e.source().position(),e.data("command")));let xe=x.filter(e=>["s","n","e","w","ne","nw","se","sw"].includes(e.data("command")));xe=xe.filter(e=>e.target().data("area")!=nexMap.currentArea||e.target().data("z")!=nexMap.currentZ),xe.forEach(e=>createExit(e.source().position(),e.data("command"),e.data("source")))},nexMap.generateGraph=async function(){return nexMap.logging&&console.log("nexMap: nexMap.generateGraph()"),new Promise((resolve,reject)=>{for(let area of nexMap.mudmap.areas)area.roomCount&&nexMap.mudmap.areas[area.id].rooms.forEach(room=>{let xts=[];nexMap.mudmap.areas.find(e=>e.rooms.find(e2=>e2.id==room.id)).rooms.find(e3=>e3.id==room.id).exits.forEach(e=>xts.push(nexMap.shortDirs[e.name]?nexMap.shortDirs[e.name]:e.name));let newNode={group:"nodes",data:{id:room.id,area:area.id,areaName:area.name,environment:room.environment,name:room.name,userData:room.userData,z:room.coordinates[2],exits:xts},position:{x:20*room.coordinates[0],y:-20*room.coordinates[1],z:room.coordinates[2]},classes:[`environment${room.environment}`],locked:!0};cy.add(newNode)});for(let area of nexMap.mudmap.areas)area.roomCount&&nexMap.mudmap.areas[area.id].rooms.forEach(room=>{room.exits.forEach(exit=>{let newEdge,xt=nexMap.shortDirs[exit.name]?nexMap.shortDirs[exit.name]:exit.name;0==cy.$(`#${room.id}-${exit.exitId}`).length&&(newEdge={group:"edges",data:{id:`${room.id}-${exit.exitId}`,source:room.id,target:exit.exitId,area:area.id,command:xt,z:room.coordinates[2]}},"in"==xt?newEdge.classes=["inexit"]:"out"==xt?newEdge.classes=["outexit"]:"up"==xt?newEdge.classes=["upexit"]:"d"==xt?newEdge.classes=["downexit"]:"worm warp"==xt?newEdge.classes=["wormwarp"]:"enter grate"==xt&&(newEdge.classes=["sewergrate"]),cy.add(newEdge))})});cy.edges().filter(e=>"southeastst"==e.data("command")).forEach(e=>e.data().command="se"),nexMap.wormWarpExits=cy.edges().filter(e=>"worm warp"==e.data("command")),nexMap.settings.userPreferences.useWormholes||nexMap.wormWarpExits.remove(),console.log("nexMap: Graph model created."),resolve()})},nexMap.loadDependencies=async function(){nexMap.logging&&console.log("nexMap: nexMap.loadDependencies()");let preloader=async function(){return new Promise((resolve,reject)=>{let src="https://cdnjs.cloudflare.com/ajax/libs/cytoscape/3.18.2/cytoscape.min.js",head=document.getElementsByTagName("head")[0],elem=document.createElement("script");elem.src=src+"?"+Math.random(),elem.onload=()=>{console.log("Loaded "+src+"."),nexMap.cytoscapeLoaded=!0,resolve()},elem.onerror=()=>{console.log("Unable to load "+src+"."),reject()},head.appendChild(elem)})},clone=function(obj){let copy;if(null==obj||"object"!=typeof obj)return obj;if(obj instanceof String)return(" "+obj).slice(1);if(obj instanceof Date)return copy=new Date,copy.setTime(obj.getTime()),copy;if(obj instanceof Array){copy=[];for(var i=0,len=obj.length;i<len;i++)copy[i]=clone(obj[i]);return copy}if(obj instanceof Object){for(var attr in copy={},obj)obj.hasOwnProperty(attr)&&(copy[attr]=clone(obj[attr]));return copy}throw new Error("Unable to copy object! Type not supported.")},restoreMap,loadMap=async function(){return new Promise((resolve,reject)=>{$.ajax({async:!0,global:!1,url:"https://raw.githubusercontent.com/Log-Wall/AchaeaNexus/main/mudletmap-min.json",dataType:"json",success:function(data){nexMap.mudmap=data,nexMap.mudletMapLoaded=!0},complete:()=>{nexMap.mudletMapLoaded&&resolve(),console.log("nexMap: mudlet JSON map loaded.")},error:()=>{reject()}})})};return function(){$("body").on("restoreMap",(function(e,_map){console.log(_map),window.Map=_map,$("body").off("restoreMap")}));let f=document.createElement("iframe");f.width=0,f.height=0,f.src="about:blank",f.onload=function(){$("body").trigger("restoreMap",[clone(f.contentWindow.Map)]),document.body.removeChild(f)},document.body.appendChild(f)}(),await Promise.all([preloader(),loadMap()]),!0},nexMap.initializeGraph=function(){nexMap.logging&&console.log("nexMap: nexMap.initializeGraph()"),$("#cy").length&&$("#cy").remove(),$("<div></div>",{id:"currentRoomLabel"}).appendTo("#tbl_nexmap_map"),$("<div></div>",{id:"cy"}).appendTo("#tbl_nexmap_map"),$("<div></div>",{style:"position:absolute;bottom:0px",id:"currentExitsLabel"}).appendTo("#tbl_nexmap_map"),cy=cytoscape({container:document.getElementById("cy"),layout:"grid",zoom:1,minZoom:.25,maxZoom:3,boxSelectionEnabled:!1,selectionType:"single",hideEdgesOnViewport:!0,textureOnViewport:!0,motionBlur:!0,pixelRatio:"auto"})},nexMap.startUp=function(){nexMap.logging&&console.log("nexMap: nexMap.startUp()"),run_function("nexMap.settings",{},"nexmap"),run_function("nexMap.display",{},"nexmap"),nexMap.display.notice("Loading mapper modules"),nexMap.loadDependencies().then(()=>{nexMap.initializeGraph(),nexMap.generateGraph().then(()=>{run_function("nexMap.styles",{},"nexmap"),run_function("nexMap.walker",{},"nexmap"),nexMap.styles.style(),nexMap.display.notice("Mapper loaded and ready for use."),send_command("ql")})})},nexMap.settings={},nexMap.settings.userPreferences=get_variable("nexMapConfigs")||{version:"1.0",commandSeparator:"\\",useDuanathar:!1,duanatharCommand:"say duanathar",useWormholes:!1,vibratingStick:!1},nexMap.settings.save=function(){set_variable("nexMapConfigs",nexMap.settings.userPreferences),set_variable("nexMapStyles",nexMap.styles.userPreferences)},nexMap.settings.toggleWormholes=function(val){val&&(nexMap.settings.userPreferences.useWormholes=val),nexMap.settings.userPreferences.useWormholes?(nexMap.settings.userPreferences.useWormholes=!1,nexMap.wormWarpExits.remove(),nexMap.display.notice("No longer using wormholes.")):(nexMap.settings.userPreferences.useWormholes=!0,nexMap.wormWarpExits.restore(),nexMap.display.notice("Will now use wormholes.")),nexMap.settings.save()},nexMap.settings.toggle=function(set){"useWormholes"!=set?(nexMap.settings.userPreferences[set]?nexMap.settings.userPreferences[set]=!1:nexMap.settings.userPreferences[set]=!0,nexMap.settings.save()):nexMap.settings.toggleWormholes()},nexMap.styles={},nexMap.styles.userPreferences=get_variable("nexMapStyles")||{nodeShape:"rectangle",currentRoomShape:"star",currentRoomColor:"DeepPink",displayWormholes:!1},nexMap.styles={},nexMap.styles.userPreferences=get_variable("nexMapStyles")||{nodeShape:"rectangle",currentRoomShape:"star",currentRoomColor:"DeepPink",displayWormholes:!1},nexMap.styles.style=function(){nexMap.logging&&console.log("nexMap: nexMap.style()"),$("#cy").css({id:"cy","background-image":" url(/includes/images/windows/map-background.jpg)",width:"100%",height:"calc(100% - 44px)",position:"absolute",overflow:"hidden",top:"0px",left:"0px","margin-top":"22px","margin-bottom":"22px"}),cy.startBatch(),cy.style().clear(),cy.style().selector("node").style({shape:nexMap.styles.userPreferences.nodeShape,width:10,height:10,"border-color":"black","border-width":.5,display:"none",locked:!0}).selector("edge").style({width:1,"line-color":"grey"}),cy.style().selector(".displayLabel").style({label:"data(id)",color:"white"}).selector(".areaDisplay").style({display:"element"}).selector(".areaAdjacent").style({display:"element",visibility:"hidden"}).selector(".wormhole").style({visibility:nexMap.styles.userPreferences.displayWormholes?"visible":"hidden",width:1}).selector(".sewergrate").style({visibility:"hidden"}).selector(".downexit").style({"source-arrow-shape":"triangle","curve-style":"bezier",visibility:"hidden"}).selector(".upexit").style({"source-arrow-shape":"triangle","curve-style":"bezier",visibility:"hidden"}).selector(".inexit").style({"source-arrow-shape":"circle","curve-style":"bezier",visibility:"hidden"}).selector(".outexit").style({"source-arrow-shape":"circle","curve-style":"bezier",visibility:"hidden"}).selector(".pseudo-d").style({display:"element",label:"","border-color":"black","border-width":.5,"background-color":"white",shape:"polygon","shape-polygon-points":[-.6,-.7,.6,-.7,0,-.1]}).selector(".pseudo-up").style({display:"element",label:"","border-color":"black","border-width":.5,"background-color":"white",shape:"polygon","shape-polygon-points":[.6,.7,-.6,.7,0,.1]}).selector(".pseudo-in").style({display:"element",label:"","border-color":"black","border-width":.5,"background-color":"white",shape:"polygon","shape-polygon-points":[.7,-.6,.7,.6,.1,0]}).selector(".pseudo-out").style({display:"element",label:"","border-color":"black","border-width":.5,"background-color":"white",shape:"polygon","shape-polygon-points":[-.7,.6,-.7,-.6,-.1,0]}).selector(".areaAdjacentExit").style({display:"element","target-arrow-shape":"vee","curve-style":"straight","arrow-scale":.75}),nexMap.mudmap.customEnvColors.forEach(e=>{cy.style().selector(`.environment${e.id}`).style("background-color",`rgb(${e.color24RGB.join()})`)}),cy.style().selector(":selected").style({"background-color":"green"}).selector(".currentRoom").style({"border-color":nexMap.styles.userPreferences.currentRoomColor,"border-width":2,shape:nexMap.styles.userPreferences.currentRoomShape,width:12,height:12}),cy.style().update(),cy.on("mouseout","node",evt=>{evt.target.removeClass("displayLabel")}),cy.on("mouseover","node",evt=>{evt.target.flashClass("displayLabel",3e3)}),cy.on("zoom",e=>{cy.style().selector(".displayLabel").style({"font-size":`${12/cy.zoom()}pt`})}),cy.on("unselect","node",evt=>{nexMap.walker.stop()}),cy.on("select","node",evt=>{nexMap.walker.speedWalk()}),cy.endBatch()},nexMap.walker={pathing:!1,pathRooms:[],pathCommands:[],delay:!1,destination:0,antiWingAreas:[44],stepCommand:"",clientEcho:client.echo_input},nexMap.walker.speedWalk=function(){nexMap.logging&&console.log("nexMap: nexMap.walker.speedwalk()"),nexMap.walker.pathingStartTime=new Date,nexMap.walker.determinePath()},nexMap.walker.step=function(){let nmw=nexMap.walker;if(nexMap.logging&&console.log("nexMap: nexMap.walker.step()"),0==nmw.pathCommands.length)return void(nexMap.logging&&console.log("nexMap: nexMap.walker.step RETURN"));let index=nmw.pathRooms.indexOf(GMCP.Room.Info.num);if(GMCP.Room.Info.num==nmw.destination)return nmw.pathing=!1,nmw.reset(),void nexMap.display.notice(`Pathing complete. ${(new Date-nmw.pathingStartTime)/1e3}s`);nmw.pathRooms.includes(GMCP.Room.Info.num.toString())&&(nmw.pathing=!0,nmw.stepCommand=nmw.pathCommands[index]),send_command(`path stop${nexMap.settings.userPreferences.commandSeparator}${nmw.stepCommand}`)},nexMap.walker.determinePath=function(s,t){nexMap.logging&&console.log(`nexMap: nexMap.walker.determinePath(${s}, ${t})`);let source=s||cy.$(".currentRoom").data("id"),target=t||cy.$(":selected").data("id"),nmw=nexMap.walker;nmw.destination=target,nmw.pathRooms=[],nmw.pathCommands=[];let astar=cy.elements().aStar({root:`#${cy.$id(source).data("id")}`,goal:`#${cy.$id(target).data("id")}`,directed:!0});astar.found?(astar.path.nodes().forEach(e=>nmw.pathRooms.push(e.data("id"))),astar.path.edges().forEach(e=>nmw.pathCommands.push(e.data("command"))),nmw.checkClouds(astar,target),nmw.hybridPath(),nmw.step()):nexMap.display.notice(`No path to ${target} found.`)},nexMap.walker.checkClouds=function(astar,target){if(nexMap.logging&&console.log("nexMap: nexMap.walker.checkClouds()"),!nexMap.settings.userPreferences.useDuanathar)return;let nmw=nexMap.walker,firstWingRoom=astar.path.nodes().find(e=>"y"!=e.data().userData.indoors&&!nmw.antiWingAreas.includes(e.data("area"))),wingRoomId=firstWingRoom?firstWingRoom.data("id"):0,cloudPath=cy.elements().aStar({root:`#${cy.$id(3885).data("id")}`,goal:`#${cy.$id(target).data("id")}`,directed:!0});astar.distance>nmw.pathRooms.indexOf(wingRoomId)+cloudPath.distance&&(nmw.pathRooms.splice(nmw.pathRooms.indexOf(wingRoomId)+1),nmw.pathCommands.splice(nmw.pathRooms.indexOf(wingRoomId)),nmw.pathCommands.push(nexMap.settings.userPreferences.duanatharCommand),cloudPath.path.nodes().forEach(e=>nmw.pathRooms.push(e.data("id"))),cloudPath.path.edges().forEach(e=>nmw.pathCommands.push(e.data("command"))))},nexMap.walker.hybridPath=function(){nexMap.logging&&console.log("nexMap: nexMap.walker.hybridPath()");let nmwpc=nexMap.walker.pathCommands,nmwpr=nexMap.walker.pathRooms;console.log(nmwpc),console.log(nmwpr);let hybCmds=[],hybRm=[nmwpr[0]];nmwpc.forEach((e,i)=>{0!=i||Object.values(nexMap.shortDirs).includes(e)?Object.values(nexMap.shortDirs).includes(e)||(hybRm.push(nmwpr[i]),hybRm.push(nmwpr[i+1]),hybCmds.push(`path track ${nmwpr[i]}`),hybCmds.push(e)):(hybRm.push(nmwpr[i+1]),hybCmds.push(e))}),Object.values(nexMap.shortDirs).includes(nmwpc[nmwpc.length-1])&&(hybRm.push(nmwpr[nmwpr.length-1]),hybCmds.push(`path track ${nmwpr[nmwpr.length-1]}`)),console.log(hybCmds),console.log(hybRm),nexMap.walker.pathCommands=[...hybCmds],nexMap.walker.pathRooms=[...hybRm]},nexMap.walker.reset=function(){nexMap.logging&&console.log("nexMap: nexMap.walker.reset()"),nexMap.walker.pathing=!1,cy.$(":selected").unselect(),nexMap.walker.pathCommands=[],nexMap.walker.pathRooms=[],nexMap.walker.destination=0,client.echo_input=nexMap.walker.clientEcho},nexMap.walker.stop=function(){nexMap.logging&&console.log("nexMap: nexMap.walker.stop()"),!0===nexMap.walker.pathing&&(nexMap.walker.reset(),nexMap.display.notice("Pathing canceled"))},nexMap.display={pageBreak:20,pageIndex:0,displayCap:{},displayClick:"",displayEntries:{}},nexMap.display.notice=function(txt){let msg=$("<span></span>",{class:"mono"});$("<span></span>",{style:"color:DodgerBlue"}).text("[-").appendTo(msg),$("<span></span>",{style:"color:OrangeRed"}).text("nexMap").appendTo(msg),$("<span></span>",{style:"color:DodgerBlue"}).text("-] ").appendTo(msg),$("<span></span>",{style:"color:GoldenRod"}).text(txt).appendTo(msg),print(msg[0].outerHTML)},nexMap.display.generateTable=function(entries,caption){nexMap.display.pageIndex=0,nexMap.display.displayEntries=entries,nexMap.display.displayCap=caption,nexMap.display.displayTable()},nexMap.display.click=function(id){cy.$(":selected").unselect(),cy.$(`#${id}`).select()},nexMap.display.displayTable=function(){let entries=nexMap.display.displayEntries,caption=nexMap.display.displayCap,tab=$("<table></table>",{class:"mono",style:"max-width:100%;border:1px solid white;border-spacing:0px"});if(0==nexMap.display.pageIndex){let cap=$("<caption></caption>",{style:"text-align:left"}).appendTo(tab);$("<span></span>",{style:"color:DodgerBlue"}).text("[-").appendTo(cap),$("<span></span>",{style:"color:OrangeRed"}).text("nexMap").appendTo(cap),$("<span></span>",{style:"color:DodgerBlue"}).text("-] ").appendTo(cap),$("<span></span>",{style:"color:GoldenRod"}).text("Displaying matches for ").appendTo(cap),$("<span></span>",{style:"font-weight:bold;color:LawnGreen"}).text(nexMap.display.displayCap).appendTo(cap);let header=$("<tr></tr>",{style:"text-align:left;color:Ivory"}).appendTo(tab);$("<th></th>",{style:"width:5em"}).text("Num").appendTo(header),$("<th></th>",{style:"width:auto"}).text("Name").appendTo(header),$("<th></th>",{style:"width:auto"}).text("Area").appendTo(header)}else{let header=$("<tr></tr>",{style:"text-align:left;color:Ivory"}).appendTo(tab);$("<th></th>",{style:"width:5em"}).text("").appendTo(header),$("<th></th>",{style:"width:auto"}).text("").appendTo(header),$("<th></th>",{style:"width:auto"}).text("").appendTo(header)}let startIndex=nexMap.display.pageIndex>0?nexMap.display.pageIndex*nexMap.display.pageBreak:0,pagination;for(let i=startIndex;i<entries.length&&i<startIndex+nexMap.display.pageBreak;i++){let row=$("<tr></tr>",{style:"cursor:pointer;color:dimgrey;"}).appendTo(tab);$("<td></td>",{style:"color:grey",onclick:`nexMap.display.click(${JSON.stringify(entries[i].data("id"))});`}).text(entries[i].data("id")).appendTo(row),$("<td></td>",{style:"color:gainsboro;text-decoration:underline",onclick:`nexMap.display.click(${JSON.stringify(entries[i].data("id"))});`}).text(entries[i].data("name")).appendTo(row),$("<td></td>",{onclick:`nexMap.display.click(${JSON.stringify(entries[i].data("id"))});`}).text(entries[i].data("areaName")).appendTo(row)}print(tab[0].outerHTML),Math.ceil(nexMap.display.displayEntries.length/nexMap.display.pageBreak)>nexMap.display.pageIndex+1?(pagination=$("<span></span>",{style:"color:Goldenrod"}).text(`Displaying ${startIndex+nexMap.display.pageBreak} of ${nexMap.display.displayEntries.length}.`),nexMap.display.pageIndex++,$("<span></span>",{style:"color:Goldenrod"}).text(" Click for ").appendTo(pagination),$("<a></a>",{style:"cursor:pointer;color:Ivory;text-decoration:underline;",onclick:"nexMap.display.displayTable()"}).text("MORE").appendTo(pagination)):pagination=$("<span></span>",{style:"color:Goldenrod"}).text(`Displaying ${nexMap.display.displayEntries.length} of ${nexMap.display.displayEntries.length}.`),print(pagination[0].outerHTML)},nexMap.display.configDialog=function(){let main=$("<div></div>",{id:"nexMapDialog"});$("<div></div>").appendTo(main);let tab=$("<table></table>",{class:"mono",style:"max-width:100%;border-spacing:4x;vertical-align:center"}),header=$("<tr></tr>",{style:"text-align:left;color:Ivory"}).appendTo(tab);$("<th></th>",{style:"width:auto"}).text("Option").appendTo(header),$("<th></th>",{style:"width:auto"}).text("Setting").appendTo(header);let configs=[{name:"Wormholes",setting:"useWormholes"},{name:"Duanathar",setting:"useDuanathar"},{name:"Vibrating Stick",setting:"vibratingStick"}];for(let i=0;i<configs.length;i++){let lab=$("<label></label>",{class:"nexswitch nexInput"});$("<input></input>",{type:"checkbox",class:"nexbox nexInput"}).prop("checked",nexMap.settings.userPreferences[configs[i].setting]).on("change",(function(){nexMap.settings.toggle(configs[i].setting)})).appendTo(lab),$("<span></span>",{class:"nexslider nexInput"}).appendTo(lab);let row=$("<tr></tr>",{class:"nexRow",style:"cursor:pointer;color:dimgrey;"}).appendTo(tab);$("<td></td>",{style:"color:grey"}).text(configs[i].name).appendTo(row),$("<td></td>",{style:"color:gainsboro;text-decoration:underline"}).append(lab).appendTo(row)}let tin=$("<input></input>",{type:"text",class:"nexInput",id:"nexCommandSep",maxlength:1,width:24}),row=$("<tr></tr>",{class:"nexRow",style:"cursor:pointer;color:dimgrey;"}).appendTo(tab);$("<td></td>",{style:"color:grey"}).text("Command Separator").appendTo(row),$("<td></td>",{style:"color:gainsboro;text-decoration:underline"}).append(tin).appendTo(row),tab.appendTo(main),main.dialog({title:"nexMap Configuration",width:250,close:function(){nexMap.settings.userPreferences.commandSeparator=$("#nexCommandSep")[0].value.toString(),nexMap.settings.save(),$(".nexInput").remove(),$(".nexMapDialog").parent().remove()}})};let generateStyle=function(){let inject=function(rule){$("body").append('<div class="client_nexmap-rules">&shy;<style>'+rule+"</style></div>")};$(".client_nexmap-rules").length&&$(".client_nexmap-rules").remove(),inject('.nexswitch {position: relative;display: inline-block;width: 38px;height: 22px;}.nexswitch input {opacity: 0;width: 0;height: 0;}.nexslider {position: absolute;cursor: pointer;top: 0;left: 0;right: 0;bottom: 0;background-color: #ccc;-webkit-transition: .4s;transition: .4s;border-radius: 24px;}.nexslider:before {position: absolute;content: "";height: 16px;width: 16px;left: 3px;bottom: 3px;background-color: white;-webkit-transition: .4s;transition: .4s;border-radius: 50%;}input:checked + .nexslider {background-color: #2196F3;}input:focus + .nexslider {box-shadow: 0 0 1px #2196F3;}input:checked + .nexslider:before {-webkit-transform: translateX(16px);-ms-transform: translateX(16px);transform: translateX(16px);}.nexcontainer{display:flex;}.nexfixed{ width:200px;}.nexflex-item{flex-grow:1;}')};generateStyle();
